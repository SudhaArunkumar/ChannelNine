@model ChannelNineMedia.Models.PersonViewModel
@using GridMvc.Html

@{
    ViewBag.Title = "Person";
}
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")"></script>
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
    <title>Index</title>
</head>
<h2>Search Races</h2>
@using (Html.BeginForm("Index", "Person", FormMethod.Post, new { id = "PersonForm" }))
{
    <div class="row">
        <div class="col-md-12">
            <div class="form-horizontal">
                <div></div>
                <div class="col-md-6">
                    <div class="control-label col-md-3">
                        <span>Races:</span>
                    </div>
                    <div>
                        @Html.DropDownListFor(m => m.Races, Model.RacesList, new { @class = "form-control datepicker", @id = "TxtStartDate", @tabindex = 2 })
                    </div>
                </div>
                <div></div>
            </div>
        </div>
        <div class="form-group col-md-12 col-xs-12 button-row">
            <input type="submit" name="submit" id="Save" value="Search" class="btn width-20 btn-info pull-left" style="margin:0px 5px 5px 70px" />
        </div>
    </div>
    <div class="row">
        <div id="div-result">
            @if (Model.SearchPersonList != null)    
            {
                <div class="form-group col-md-12">

                   @{
                        @Html.Grid(Model.SearchPersonList).SetRowCssClasses(p => "row_" + p.PersonName.ToString()).Columns(columns =>
                            {
                            columns.Add(o => o.PersonName)
                            .Titled("Person Name")
                            .RenderValueAs(@<span id="span_1">@item.PersonName</span>)
                            .Sortable(false);
                            columns.Add(o => o.Races)
                            .Titled("Races")
                            .RenderValueAs(@<span id="span_1">@item.Races</span>)
                            .Sortable(false);
                            columns.Add(o => o.Age)
                            .Titled("Age")
                            .RenderValueAs(@<span id="span_1">@item.Age</span>)
                            .Sortable(false);
                            columns.Add(o => o.Height)
                            .Titled("Height")
                            .RenderValueAs(@<span id="span_1">@item.Height</span>)
                            .Sortable(false);
                            }).Named("LabelRangeList").WithPaging(20)
                        }
                </div>
            }
        </div>
    </div>
}

